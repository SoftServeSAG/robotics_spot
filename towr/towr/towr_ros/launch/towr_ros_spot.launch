<?xml version="1.0"?>
<launch>
  <!-- ros_args.launch -->
  <arg name="debug" default="false" doc="run with gdb" />
    
  <!-- so the logging prints the node name -->
  <env name="ROSCONSOLE_FORMAT" value="[${severity}] [${node}]: ${message}" />

  <!-- TOWR: Start the optimizer and GUI-->
  <group unless="$(arg debug)">
    <include file="$(find towr_ros)/launch/towr_nodes.launch">
      <arg name="gdb" value="" />
    </include>
  </group>
  
  <!-- TOWR: Start the optimizer and GUI with gdb -->
  <group if="$(arg debug)">
    <include file="$(find towr_ros)/launch/towr_nodes.launch">
      <arg name="gdb" value="gdb -ex run --args" />
    </include>
  </group>
   
  <!-- visualizes goal, opt. parameters and cartesian base state, endeffector positions and forces -->
  <node name="rviz_marker_node" pkg="xpp_vis" type="rviz_marker_node" output="screen">
  </node>
  
  <!-- Launch rviz with specific configuration -->
  <node name="rviz_xpp" pkg="rviz" type="rviz" args="-d $(find towr_ros)/rviz/xpp_towr_spot.rviz">
  </node>
  
  <!--  Launches the URDF visualizers  --> 
  <include file="$(find xpp_spot)/launch/spot.launch"></include>
  
  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
    command="$(find xacro)/xacro --inorder '$(find spot_description)/urdf/spot.urdf.xacro'" />

<!--  &lt;!&ndash; Load joint controller configurations from YAML file to parameter server &ndash;&gt;-->
<!--  <rosparam file="$(find spot_config)/config/ros_control/ros_control.yaml" command="load" ns="/spot"/>-->

<!--  &lt;!&ndash; load the controllers &ndash;&gt;-->
<!--  <node name="controller_spawner"-->
<!--  pkg="controller_manager"-->
<!--  type="spawner"-->
<!--  respawn="false"-->
<!--  output="screen"-->
<!--  ns="/spot"-->
<!--  args="-->
<!--            joint_states_controller-->
<!--            joint_group_position_controller-->
<!--            ">-->
<!--  </node>-->


  <node name="joint_pose_translator"
    pkg="towr_ros"
    type="joint_pose_translator"
    respawn="false"
    output="screen">
  </node>

</launch>
