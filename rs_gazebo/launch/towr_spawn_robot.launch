<launch>
    <arg name="robot_name"         default="/"/> <!-- Change this for namespacing. -->
    <arg name="rviz"               default="false"/> <!-- Set to true to run rviz in parallel. -->
    <arg name="lite"               default="false" />  <!-- Set to true if you're using CHAMP lite version. Only useful for microcontrollers. -->
    <arg name="ros_control_file"   default="$(find spot_config)/config/ros_control/ros_control.yaml" /> <!-- Path to ROS Control configurations. Do not touch. -->
    <arg name="gazebo_world"       default="$(find spot_config)/worlds/outdoor.world" /> <!-- Path to Gazebo world you want to load. -->
    <arg name="world_init_x"       default="0.0" /> <!-- X Initial position of the robot in Gazebo World -->
    <arg name="world_init_y"       default="0.0" /> <!-- Y Initial position of the robot in Gazebo World -->
    <arg name="world_init_heading" default="0.0" /> <!-- Initial heading of the robot in Gazebo World -->

    <param name="use_sim_time" value="true" />

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
    command="$(find xacro)/xacro --inorder '$(find spot_description)/urdf/spot.urdf.xacro'" />

<node  name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg robot_name)  
        -param robot_description -robot_namespace $(arg robot_name) 
        -x $(arg world_init_x) -y $(arg world_init_y) -z 0.72 -Y $(arg world_init_heading)" />

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find spot_config)/config/ros_control/ros_control.yaml" command="load"/>

  <!-- load the controllers -->
        <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="
            joint_states_controller
            joint_group_position_controller
            ">
        </node>
</launch>
